#include<iostream>
using namespace std;
class Node
{
	public:
	int data;
	Node* prev;
	Node* next;
	Node(int data){
		this->data=data;
		prev=NULL;
		next=NULL;
	}
};
int search(Node* &head, int x)
{
 
    Node* temp = head;
    int pos = 0;
    while (temp->data != x && temp->next != NULL) {
        pos++;
        temp = temp->next;
    }
    if (temp->data != x)
        return -1;
    return (pos);
}

void insertAtHead(Node* &head,int val){
	Node* n = new Node(val);
	n->next=head;
	if(head!=NULL){
		head->prev=n;
	}head=n;
}
void insertAtTail(Node* &head,int val){
	if(head==NULL){
		insertAtHead(head,val);
		return;
	}
	Node* n = new Node(val);
        Node* temp = head;
	while(temp->next!=NULL){
		temp=temp->next;
	}
	temp->next = n;
	n->prev=temp;
}

void deleteAtHead(Node* &head)
{
	Node* todelete = head;
	head=head->next;
	head->prev=NULL;
	delete todelete;
}
void deletion(Node* &head,int pos){
	if(pos==1){
		deleteAtHead(head);
		return ;
	}int count=1;
	Node* temp=head;
	while(temp!=NULL&&count!=pos){
		temp=temp->next;
		count++;
	}
	temp->prev->next = temp->next;
	if(temp->next!=NULL)temp->next->prev=temp->prev;
	delete temp;
}
void display(Node* &head){
	Node* temp=head;
	while(temp!=NULL){
		cout<<temp->data<<"->";
	        temp=temp->next;
	}cout<<"null"<<endl;
}
int main(){
	Node* head  =NULL;
	//insertAtTail(head,10);
	insertAtTail(head,20);
	insertAtTail(head,30);
	insertAtTail(head,40);
	insertAtTail(head,50);
	insertAtTail(head,60);
	display(head);
	insertAtHead(head,10);
	display(head);
	insertAtMid(head,0,200);
	display(head);
	//int ans = search(head,40);
	//int ans = search(head,50);
	int ans = search(head,90);
	if(ans!=-1){
		cout<<"The number is present at index: "<<ans;
	}else{
		cout<<"The number is not present in the linked list.";
	}
	return 0;
}
